{
	"info": {
		"_postman_id": "d34819b3-557b-4609-aebd-18bace0da052",
		"name": "ACC Packages API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39082503"
	},
	"item": [
		{
			"name": "API References",
			"item": [
				{
					"name": "Run Firstly-Get Project ID",
					"item": [
						{
							"name": "GET one ACC account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// find the specified project and setup the environment variable \"hub_id\"",
											"const hub_name = pm.variables.get(\"hub_name\");",
											"pm.test(\"find matches account by name: \" + hub_name, function () {",
											"    const body = pm.response.json();",
											"    const found = body.data.find(d => d.attributes.name == hub_name);",
											"",
											"    pm.expect(found).to.not.be.undefined;",
											"    ",
											"    pm.environment.set(\"hub_id\", found.id);",
											"    pm.environment.set(\"account_id\", found.id.split(\"b.\").join(\"\"));",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.unset(\"hub_id\");",
											"",
											"pm.variables.set(\"hub_name\", \"change to your hub/account name\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_domain}}/project/v1/hubs?filter[extension.type]=hubs:autodesk.bim360:Account",
									"host": [
										"{{base_domain}}"
									],
									"path": [
										"project",
										"v1",
										"hubs"
									],
									"query": [
										{
											"key": "filter[extension.type]",
											"value": "hubs:autodesk.bim360:Account"
										}
									]
								},
								"description": "Returns a collection of accessible hubs for this member.<br/>\nhttps://forge.autodesk.com/en/docs/data/v2/reference/http/hubs-GET/"
							},
							"response": []
						},
						{
							"name": "GET one ACC project",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.unset(\"project_id\");",
											"pm.environment.unset(\"project_id_without_b\");",
											"pm.environment.unset(\"review_id\");",
											"pm.environment.unset(\"version_id\");",
											"",
											"pm.variables.set(\"project_name\", \"change to your project name\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// find the specified project and setup the environment variable \"project_id\"",
											"const project_name = pm.variables.get(\"project_name\") ",
											"pm.test(\"find matches project by name: \" + project_name, function () {",
											"    const body = pm.response.json();",
											"    const found = body.data.find(d => d.attributes.name == project_name)",
											"",
											"    pm.expect(found).to.not.be.undefined;",
											"    ",
											"    postman.setEnvironmentVariable(\"project_id\", found.id);",
											"    postman.setEnvironmentVariable(\"project_id_without_b\", found.id.split(\"b.\").join(\"\"));",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_domain}}project/v1/hubs/{{hub_id}}/projects",
									"host": [
										"{{base_domain}}project"
									],
									"path": [
										"v1",
										"hubs",
										"{{hub_id}}",
										"projects"
									]
								},
								"description": "Returns a collection of projects for a given hub_id. A project represents a BIM 360 Team project, a Fusion Team project, a BIM 360 Docs project, or an A360 Personal project. Multiple projects can be created within a single hub.<br/>\nhttps://forge.autodesk.com/en/docs/data/v2/reference/http/hubs-hub_id-projects-GET/"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Packages",
					"item": [
						{
							"name": "Packages - GET packages",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type header present and is application/json\", () => {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"pm.test(\"Response body is not empty\", () => {",
											"    var responseBody = pm.response.json();",
											"",
											"    pm.expect(responseBody.results).to.be.an(\"array\");",
											"    pm.expect(responseBody.results && responseBody.results.length > 0).to.eql(true);",
											"",
											"    pm.environment.set(\"package_id\", responseBody.results[0].id);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-user-id",
										"value": "{{user_id}}",
										"description": "The ID of a user on whose behalf the request is made. Your application has access to all users specified by the administrator in the SaaS Integrations UI. Use this header to specify which user should be affected by the request.\nThis header is only required when using two-legged authentication. It is not needed for three-legged authentication.\n\nOnly user’s Autodesk ID (autodeskId) can be accepted.",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_domain}}/construction/packages/v1/projects/:projectId/packages",
									"host": [
										"{{base_domain}}"
									],
									"path": [
										"construction",
										"packages",
										"v1",
										"projects",
										":projectId",
										"packages"
									],
									"query": [
										{
											"key": "limit",
											"value": "200",
											"description": "The number of packages to return in the response payload.\n- For example: ``limit=2``.\n- Acceptable values: ``1-200``\n- Default value: ``200``",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The number of packages that you want to begin retrieving results from.\n- For example: ``offset=10``\n- Default value: ``0``",
											"disabled": true
										},
										{
											"key": "filter[createdBy]",
											"value": "L9VDREARJ7X2,9NGKQKPXAUHG",
											"description": "Filter by Autodesk ID of users that is included in the field createdBy of packages in response.\nThis may be a value or a comma-separated list of values as shown in the examples below.",
											"disabled": true
										},
										{
											"key": "filter[updatedBy]",
											"value": "L9VDREARJ7X2,9NGKQKPXAUHG",
											"description": "Filter by Autodesk ID of users that is included in the field updatedBy of packages in response.\nThis may be a value or a comma-separated list of values as shown in the examples below.",
											"disabled": true
										},
										{
											"key": "filter[createdAt]",
											"value": "2025-03-26T16:00:00.000Z..2025-03-28T15:59:59.999Z",
											"description": "Filter by the creation time range of packages. The format is a range separated by `..`.\n- For example: ``2025-03-26T16:00:00.000Z..`` (after a specific time), ``..2025-03-28T15:59:59.999Z`` (before a specific time), or ``2025-03-26T16:00:00.000Z..2025-03-28T15:59:59.999Z`` (between two times).",
											"disabled": true
										},
										{
											"key": "filter[updatedAt]",
											"value": "2025-03-26T16:00:00.000Z..2025-03-28T15:59:59.999Z",
											"description": "Filter by the update time range of packages. The format is a range separated by `..`.\n- For example: ``2025-03-26T16:00:00.000Z..`` (after a specific time), ``..2025-03-28T15:59:59.999Z`` (before a specific time), or ``2025-03-26T16:00:00.000Z..2025-03-28T15:59:59.999Z`` (between two times).",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "name",
											"description": "Provide options to sort on single field, in ascending (``asc``) by default or descending (``desc``) order. \n- For example: ``sort=name desc``\n- Acceptable values of sorting field: ``name``, ``createdAt``, ``updatedAt``, ``displayId``",
											"disabled": true
										},
										{
											"key": "filter[versionType]",
											"value": "FIXED",
											"description": "Filter by version type of packages\n**FIXED**: Files in this package automatically update to the latest current versions.\n**CURRENT**: Files in this package remain fixed at the selected versions.\nSee [Flexible Package Types](https://help.autodesk.com/view/BUILD/ENU/?guid=File_Packages_Docs) for more details on version types.",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "projectId",
											"value": "{{project_id_without_b}}",
											"description": "he ID of the project.\nUse the Data Management API to retrieve the project ID. For more information, see the Retrieve a Project ID tutorial. You can provide the project ID with or without the “b.” prefix.\n\nExample with prefix: b.657a5565-09b7-48e0-bd03-acacfe42efaf\nExample without prefix: 657a5565-09b7-48e0-bd03-acacfe42efaf"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Packages - GET package resources",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Content-Type header present and is application/json\", () => {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
											"});",
											"",
											"pm.test(\"Response body is not empty\", () => {",
											"    var responseBody = pm.response.json();",
											"",
											"    pm.expect(responseBody.results).to.be.an(\"array\");",
											"    // pm.expect(responseBody.results && responseBody.results.length > 0).to.eql(true);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-user-id",
										"value": "{{user_id}}",
										"description": "The ID of a user on whose behalf the request is made. Your application has access to all users specified by the administrator in the SaaS Integrations UI. Use this header to specify which user should be affected by the request.\nThis header is only required when using two-legged authentication. It is not needed for three-legged authentication.\n\nOnly user’s Autodesk ID (autodeskId) can be accepted.",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_domain}}/construction/packages/v1/projects/:projectId/packages/:packageId/resources",
									"host": [
										"{{base_domain}}"
									],
									"path": [
										"construction",
										"packages",
										"v1",
										"projects",
										":projectId",
										"packages",
										":packageId",
										"resources"
									],
									"query": [
										{
											"key": "limit",
											"value": "200",
											"description": "The number of resources to return in the response payload.\n- For example: ``limit=2``\n- Acceptable values: ``1-1000``\n- Default value: ``200``",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "The number of resources that you want to begin retrieving results from.\n- For example: ``offset=10``\n- Default value: ``0``",
											"disabled": true
										},
										{
											"key": "filter[fileType]",
											"value": "pdf,rvt",
											"description": "Filter by file type. This can be a single value or a comma-separated list of values.\n- Example: `filter[fileType]=pdf,rvt`. Refer to [Supported Files](https://help.autodesk.com/view/BUILD/ENU/?guid=Supported_Files_Docs) for more details.",
											"disabled": true
										},
										{
											"key": "filter[version]",
											"value": "1,2,3",
											"description": "Filter by file revision number. This can be a single value or a comma-separated list of values.\n- Example: `filter[revision]=1,2,3`",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "name",
											"description": "Provide options to sort on single field, in ascending (``asc``) by default or descending (``desc``) order. \n- For example: `sort=name desc`\n- Acceptable values of sorting field: `name`, `description`, `updatedAt`, `approvalStatus`, `version`",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "projectId",
											"value": "{{project_id_without_b}}",
											"description": "he ID of the project.\nUse the Data Management API to retrieve the project ID. For more information, see the Retrieve a Project ID tutorial. You can provide the project ID with or without the “b.” prefix.\n\nExample with prefix: b.657a5565-09b7-48e0-bd03-acacfe42efaf\nExample without prefix: 657a5565-09b7-48e0-bd03-acacfe42efaf"
										},
										{
											"key": "packageId",
											"value": "{{package_id}}",
											"description": "The ID of the package."
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "scope",
				"value": "data:read",
				"type": "string"
			},
			{
				"key": "clientSecret",
				"value": "{{client_secret}}",
				"type": "string"
			},
			{
				"key": "clientId",
				"value": "{{client_id}}",
				"type": "string"
			},
			{
				"key": "accessTokenUrl",
				"value": "{{base_domain}}authentication/v2/token",
				"type": "string"
			},
			{
				"key": "authUrl",
				"value": "{{base_domain}}authentication/v2/authorize",
				"type": "string"
			},
			{
				"key": "redirect_uri",
				"value": "https://www.postman.com/oauth2/callback",
				"type": "string"
			},
			{
				"key": "tokenName",
				"value": "3LO Access Token",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}